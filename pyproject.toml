[tool.poetry]
name = "fastapi__template"
version = "0.1.0"
description = "Template for fastapi projects"
authors = ["Juan Trujillo <juantrujillo.dev@gmail.com>"]
readme = "README.md"
package-mode = false
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Framework :: FastAPI",
]

[tool.poetry.dependencies]
python = "^3.12"
ruff = "^0.6.1"
black = "^24.8.0"
bandit = "^1.7.9"
fastapi = "^0.112.1"
fastapi-pagination = "^0.12.26"
fastapi-utils = "^0.7.0"
pre-commit = "^3.8.0"
pydantic-settings = "^2.4.0"
pytest-asyncio = "^0.23.8"
pytest = "^8.3.2"
pydantic = {extras = ["email"], version = "^2.9.2"}
httpx = "^0.27.0"
coverage = "^7.6.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
uvicorn = "^0.30.6"
urllib3 = "^2.2.2"
safety = "3.2.4"
pylint = "^3.2.6"
python-dotenv = "^1.0.1"
isort = "^5.13.2"
typing-inspect = "^0.9.0"
alembic = "^1.13.2"
psycopg = "^3.2.1"
psycopg-binary = "^3.2.1"
psycopg2 = "^2.9.9"
asyncpg = "^0.29.0"
sqlmodel = "^0.0.22"
fastapi-sqlalchemy = "^0.2.1"
sqladmin = {extras = ["full"], version = "^0.19.0"}
bcrypt = "^4.2.0"
fastapi-jwt = "^0.3.0"


[build-system]
requires = ["poetry-core", "setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.sort.config]
auto = true
case-sensitive = false
sort-python = false

[tool.black]
line-length = 90
target-version = ['py312']

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 90
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [# pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []
fixable = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.isort]
py_version = 312
line_length = 90
known_first_party = ["fastapi__template", "apps", "manage.py", "tests"]

[tool.bandit]
exclude_dirs = ["*/migrations/*", "*/alembic/*", "*/tests/*"]

[tool.pylint]
max-line-length = 90

[tool.pylint.format]
max-line-length = 90

[tool.pytest.ini_options]
testpaths = ["apps/*/tests/*", "fastapi__template/test/*"]


[tool.coverage.run]
# Regexes for lines to exclude from consideration
branch = true
source = ["apps"]

[tool.coverage.paths]
source = ["*/apps/*"]

[tool.coverage.report]
fail_under = 95
include_namespace_packages = true

[tool.coverage.html]
directory = "coverage_html_report"
